name: Python Tests

on:
  push:
    branches:
      - '*'  # Bei jedem Push auf jeden Branch
  pull_request:
    branches:
      - main  # Nur bei Pull Requests gegen den main-Branch


jobs:

  # Führe die statische Codeanalyse mit mypy durch
  mypy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Installiere mypy in der Version, die in dev-requirements.txt definiert ist
          pip install $(grep '^mypy' dev-requirements.txt)
          # Installiere app dependencies um mypy ausführen zu können
          pip install -r requirements.txt

      - name: Static type checking with mypy
        run: mypy .

  # Führe die Codeanalyse mit ruff durch
  ruff:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # Installiere ruff in der Version, die in dev-requirements.txt definiert ist
          pip install $(grep '^ruff' dev-requirements.txt)

      - name: Do linting with ruff
        run: ruff check .

  # Führe die Unittests mit pytest durch
  unittests:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          # installiere app dependencies
          pip install -r requirements.txt
          # installiere test dependencies
          pip install -r tests/requirements.txt

      - name: Run Unit Tests with Coverage
        run: |
          coverage run -m pytest
          coverage report
